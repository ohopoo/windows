# -*- coding: utf-8 -*-
# Generated by Django 1.10.6 on 2017-06-23 02:30
from __future__ import unicode_literals

from django.conf import settings
from django.db import migrations, models
import django.db.models.deletion


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Achievement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=250)),
                ('link', models.URLField()),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Activity',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.CharField(blank=True, max_length=250)),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Announcement',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250)),
                ('content', models.TextField(blank=True)),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Bem',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('description', models.TextField(blank=True)),
                ('ownership_responsibility', models.TextField(blank=True)),
                ('technical_skills', models.TextField(blank=True)),
                ('transparency_support', models.TextField(blank=True)),
                ('score', models.IntegerField(default=0)),
                ('is_best', models.BooleanField(default=False)),
                ('expired', models.BooleanField(default=False)),
                ('date', models.DateTimeField()),
            ],
        ),
        migrations.CreateModel(
            name='Developer',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=50)),
                ('phone', models.CharField(blank=True, max_length=50)),
                ('skype', models.CharField(blank=True, max_length=50)),
                ('city', models.CharField(blank=True, max_length=50)),
                ('start', models.DateField(blank=True)),
                ('birth', models.DateField(blank=True)),
                ('vote_count', models.IntegerField(blank=True, default=0)),
            ],
        ),
        migrations.CreateModel(
            name='Level',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('level', models.CharField(max_length=50)),
            ],
        ),
        migrations.CreateModel(
            name='Link',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=128)),
                ('link', models.URLField()),
            ],
        ),
        migrations.CreateModel(
            name='Question',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('dislikes', models.ManyToManyField(blank=True, default=None, related_name='dislikes', to=settings.AUTH_USER_MODEL)),
                ('likes', models.ManyToManyField(blank=True, default=None, related_name='likes', to=settings.AUTH_USER_MODEL)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Reply',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('text', models.TextField(blank=True)),
                ('date', models.DateTimeField(auto_now_add=True)),
                ('question', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='windows.Question')),
                ('user', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='Report',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(blank=True, max_length=128)),
                ('general', models.TextField(blank=True, max_length=500)),
                ('achievement', models.TextField(blank=True, max_length=500)),
                ('plan', models.TextField(blank=True, max_length=500)),
                ('trouble', models.TextField(blank=True, max_length=500)),
                ('date', models.DateField(auto_now_add=True)),
            ],
        ),
        migrations.CreateModel(
            name='Team',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=50)),
                ('description', models.CharField(blank=True, max_length=250)),
            ],
        ),
        migrations.CreateModel(
            name='Vote',
            fields=[
                ('id', models.AutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('users', models.ManyToManyField(blank=True, default=None, to='windows.Developer')),
            ],
        ),
        migrations.AddField(
            model_name='developer',
            name='level',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='windows.Level'),
        ),
        migrations.AddField(
            model_name='developer',
            name='reports',
            field=models.ManyToManyField(blank=True, default=None, to='windows.Report'),
        ),
        migrations.AddField(
            model_name='developer',
            name='team',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='windows.Team'),
        ),
        migrations.AddField(
            model_name='developer',
            name='user',
            field=models.OneToOneField(on_delete=django.db.models.deletion.CASCADE, to=settings.AUTH_USER_MODEL),
        ),
        migrations.AddField(
            model_name='bem',
            name='confluence_link',
            field=models.ManyToManyField(blank=True, default=None, to='windows.Link'),
        ),
        migrations.AddField(
            model_name='bem',
            name='dev',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='windows.Developer'),
        ),
        migrations.AddField(
            model_name='bem',
            name='vote',
            field=models.OneToOneField(blank=True, default=None, null=True, on_delete=django.db.models.deletion.CASCADE, to='windows.Vote'),
        ),
        migrations.AddField(
            model_name='announcement',
            name='author',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='windows.Developer'),
        ),
        migrations.AddField(
            model_name='activity',
            name='dev',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='windows.Developer'),
        ),
        migrations.AddField(
            model_name='achievement',
            name='dev',
            field=models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='windows.Developer'),
        ),
    ]
